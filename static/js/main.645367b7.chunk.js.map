{"version":3,"sources":["lib/components/Popup.js","lib/components/Button.js","App.js","index.js"],"names":["Popup","props","ReactDOM","createPortal","className","id","memberTag","onClick","onCancel","onUnfollow","document","getElementById","Button","App","handleButtonClick","event","target","innerText","setState","showModal","handleUnfollowAction","handleCancelAction","state","bind","this","Component","render","StrictMode"],"mappings":"6SAyBeA,EArBD,SAACC,GACX,OAAOC,IAASC,aACZ,qBAAK,cAAY,QAAQC,UAAU,gBAAnC,SACI,sBAAKC,GAAG,aAAR,UACI,sBAAKD,UAAU,iBAAf,UACI,gDACA,6CAAe,sBAAMA,UAAU,aAAhB,SAA8BH,EAAMK,eACnD,yPAKJ,sBAAKF,UAAU,gBAAf,UACI,wBAAQA,UAAU,gBAAgBG,QAASN,EAAMO,SAAjD,0BACA,wBAAQJ,UAAU,cAAcG,QAASN,EAAMQ,WAA/C,8BAIZC,SAASC,eAAe,gBCbjBC,EAPA,SAACX,GACZ,OACI,wBAAQI,GAAG,OAAOD,UAAU,sBAAsBG,QAASN,EAAMM,QAAjE,uBCsDOM,G,8DAnDb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAWRa,kBAAoB,SAACC,GACW,aAA3BA,EAAMC,OAAOC,UACd,EAAKC,SAAS,CACZC,WAAW,IAIHT,SAASC,eAAe,QAC9BM,UAAY,YApBD,EAwBnBG,qBAAuB,WACXV,SAASC,eAAe,QAC9BM,UAAY,SAEhB,EAAKC,SAAS,CACZC,WAAW,KA7BI,EAiCnBE,mBAAqB,WACnB,EAAKH,SAAS,CACZC,WAAW,KAhCb,EAAKG,MAAQ,CACVH,WAAW,GAGd,EAAKL,kBAAoB,EAAKA,kBAAkBS,KAAvB,gBACzB,EAAKF,mBAAqB,EAAKA,mBAAmBE,KAAxB,gBAC1B,EAAKH,qBAAuB,EAAKA,qBAAqBG,KAA1B,gBATX,E,0CAuCnB,WAEE,IAAMJ,EAAYK,KAAKF,MAAMH,UAC7B,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAAQG,QAASiB,KAAKV,oBAErBK,EAAY,cAAC,EAAD,CAAOb,UAAU,mBAAmBG,WAAYe,KAAKJ,qBAAsBZ,SAAUgB,KAAKH,qBAAyB,Y,GA/CtHI,cCAlBvB,IAASwB,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,W","file":"static/js/main.645367b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nconst Popup = (props) => {\r\n    return ReactDOM.createPortal(\r\n        <div data-testid=\"modal\" className=\"modal-overlay\">\r\n            <div id=\"popup-card\">\r\n                <div className=\"text-container\">\r\n                    <h2>Unfollowing...</h2>\r\n                    <p>Member Tag: <span className=\"member-tag\">{props.memberTag}</span></p>\r\n                    <p>We have to let you know that if you proceed to this action, the member's content (posts) will no longer be visible to your feed, and they will \r\n                        disappear from your \"Followed Members\" list. Are you sure about this?\r\n                    </p>\r\n                </div>\r\n            \r\n                <div className=\"btn-container\">\r\n                    <button className=\"btn secondary\" onClick={props.onCancel}>Nope, cancel</button>\r\n                    <button className=\"btn primary\" onClick={props.onUnfollow}>Unfollow</button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.getElementById(\"modal-root\")\r\n    )\r\n}\r\nexport default Popup","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button id=\"btn1\" className=\"btn primary cta-btn\" onClick={props.onClick}>\r\n            Unfollow\r\n        </button>\r\n    )\r\n}\r\nexport default Button","import React, { Component } from 'react'\nimport Popup from './lib/components/Popup';\nimport Button from './lib/components/Button'\nimport './styles/Popup.css'\nimport './styles/App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       showModal: false\n    }\n\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleCancelAction = this.handleCancelAction.bind(this);\n    this.handleUnfollowAction = this.handleUnfollowAction.bind(this);\n  }\n  \n  handleButtonClick = (event) => {\n    if(event.target.innerText === \"Unfollow\"){\n      this.setState({\n        showModal: true\n      })\n    }\n    else{\n      let btn = document.getElementById(\"btn1\");\n      btn.innerText = \"Unfollow\";\n    }\n  }\n\n  handleUnfollowAction = () => {\n    let btn = document.getElementById(\"btn1\");\n    btn.innerText = \"Follow\";\n\n    this.setState({\n      showModal: false\n    })\n  }\n\n  handleCancelAction = () => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  render() {\n\n    const showModal = this.state.showModal;\n    return (\n      <div className=\"App\">\n        <Button onClick={this.handleButtonClick} />\n\n        {showModal ? <Popup memberTag=\"@superfunnymemes\" onUnfollow={this.handleUnfollowAction} onCancel={this.handleCancelAction} /> : null}\n      </div>\n    )\n  }\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}