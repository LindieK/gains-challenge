{"version":3,"sources":["lib/components/Popup.js","lib/components/Modal.js","lib/components/Button.js","App.js","index.js"],"names":["Popup","children","parent","el","useMemo","document","createElement","useEffect","target","appendChild","getElementById","removeChild","ReactDOM","createPortal","Modal","props","className","id","memberTag","bodyText","onClick","onCancel","cancelText","onUnfollow","unfollowText","Button","btnText","App","handleButtonClick","event","innerText","setState","showModal","handleUnfollowAction","handleCancelAction","state","bind","this","Component","render","StrictMode"],"mappings":"0TAGe,SAASA,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,OAC/BC,EAAKC,mBAAQ,kBAAMC,SAASC,cAAc,SAAQ,IAYxD,OATAC,qBAAU,WACN,IAAMC,EAASN,GAAUA,EAAOO,YAAcP,EAASG,SAASK,eAAe,cAI/E,OAHAF,EAAOC,YAAYN,GAGZ,WACHK,EAAOG,YAAYR,MAExB,CAACA,EAAID,IACDU,IAASC,aAAaZ,EAAUE,G,iBCZ5B,SAASW,EAAMC,GAC1B,OACI,mCACI,cAACf,EAAD,UACI,qBAAK,cAAY,QAAQgB,UAAU,gBAAnC,SACI,sBAAKC,GAAG,aAAR,UACI,sBAAKD,UAAU,iBAAf,UACI,gDACA,6CAAe,sBAAMA,UAAU,aAAhB,SAA8BD,EAAMG,eACnD,4BAAIH,EAAMI,cAGd,sBAAKH,UAAU,gBAAf,UACI,wBAAQA,UAAU,gBAAgBI,QAASL,EAAMM,SAAjD,SAA4DN,EAAMO,aAClE,wBAAQN,UAAU,cAAcI,QAASL,EAAMQ,WAA/C,SAA4DR,EAAMS,2B,UCR/EC,EAPA,SAACV,GACZ,OACI,wBAAQE,GAAG,OAAOD,UAAU,sBAAsBI,QAASL,EAAMK,QAAjE,SACKL,EAAMW,WCoDJC,G,wDApDb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAWRa,kBAAoB,SAACC,GACW,aAA3BA,EAAMrB,OAAOsB,UACd,EAAKC,SAAS,CACZC,WAAW,IAIH3B,SAASK,eAAe,QAC9BoB,UAAY,YApBD,EAwBnBG,qBAAuB,WACX5B,SAASK,eAAe,QAC9BoB,UAAY,SAEhB,EAAKC,SAAS,CACZC,WAAW,KA7BI,EAiCnBE,mBAAqB,WACnB,EAAKH,SAAS,CACZC,WAAW,KAhCb,EAAKG,MAAQ,CACVH,WAAW,GAGd,EAAKJ,kBAAoB,EAAKA,kBAAkBQ,KAAvB,gBACzB,EAAKF,mBAAqB,EAAKA,mBAAmBE,KAAxB,gBAC1B,EAAKH,qBAAuB,EAAKA,qBAAqBG,KAA1B,gBATX,E,0CAuCnB,WAEE,IAAMJ,EAAYK,KAAKF,MAAMH,UAE7B,OACE,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQI,QAASiB,KAAKT,kBAAmBF,QAAQ,aAEhDM,EAAY,cAAClB,EAAD,CAAOI,UAAU,mBAAmBK,WAAYc,KAAKJ,qBAAsBZ,SAAUgB,KAAKH,mBAAoBZ,WAAW,eAAeE,aAAa,WAAWL,SAL/J,0NAKwL,Y,GAhD5LmB,cCClB1B,IAAS2B,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASK,eAAe,W","file":"static/js/main.1facdd76.chunk.js","sourcesContent":["import { useEffect, useMemo } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default function Popup({children, parent}) {\r\n    const el = useMemo(() => document.createElement('div'), []);\r\n\r\n    //On mount function\r\n    useEffect(() => {\r\n        const target = parent && parent.appendChild ? parent : document.getElementById('modal-root');\r\n        target.appendChild(el);\r\n\r\n        //On unmount function\r\n        return () => {\r\n            target.removeChild(el);\r\n        };\r\n    }, [el, parent])\r\n    return ReactDOM.createPortal(children, el);\r\n}","import React from 'react'\r\nimport Popup from './Popup'\r\nimport '../styles/Popup.css'\r\n\r\nexport default function Modal(props) {\r\n    return (\r\n        <>\r\n            <Popup>\r\n                <div data-testid=\"modal\" className=\"modal-overlay\">\r\n                    <div id=\"popup-card\">\r\n                        <div className=\"text-container\">\r\n                            <h2>Unfollowing...</h2>\r\n                            <p>Member Tag: <span className=\"member-tag\">{props.memberTag}</span></p>\r\n                            <p>{props.bodyText}</p>\r\n                        </div>\r\n                    \r\n                        <div className=\"btn-container\">\r\n                            <button className=\"btn secondary\" onClick={props.onCancel}>{props.cancelText}</button>\r\n                            <button className=\"btn primary\" onClick={props.onUnfollow}>{props.unfollowText}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Popup>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/Button.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button id=\"btn1\" className=\"btn primary cta-btn\" onClick={props.onClick}>\r\n            {props.btnText}\r\n        </button>\r\n    )\r\n}\r\nexport default Button","import React, { Component } from 'react'\nimport Modal from './lib/components/Modal';\nimport Button from './lib/components/Button'\nimport './lib/styles/App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       showModal: false\n    }\n\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleCancelAction = this.handleCancelAction.bind(this);\n    this.handleUnfollowAction = this.handleUnfollowAction.bind(this);\n  }\n  \n  handleButtonClick = (event) => {\n    if(event.target.innerText === \"Unfollow\"){\n      this.setState({\n        showModal: true\n      })\n    }\n    else{\n      let btn = document.getElementById(\"btn1\");\n      btn.innerText = \"Unfollow\";\n    }\n  }\n\n  handleUnfollowAction = () => {\n    let btn = document.getElementById(\"btn1\");\n    btn.innerText = \"Follow\";\n\n    this.setState({\n      showModal: false\n    })\n  }\n\n  handleCancelAction = () => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  render() {\n\n    const showModal = this.state.showModal;\n    const popupText = 'We have to let you know that if you proceed to this action, the member\\'s content (posts) will no longer be visible to your feed, and they will disappear from your \"Followed Members\" list. Are you sure about this?'\n    return (\n      <div className=\"App\">\n        <Button onClick={this.handleButtonClick} btnText=\"Unfollow\"/>\n\n        {showModal ? <Modal memberTag=\"@superfunnymemes\" onUnfollow={this.handleUnfollowAction} onCancel={this.handleCancelAction} cancelText=\"Nope, cancel\" unfollowText=\"Unfollow\" bodyText={popupText}/> : null}\n      </div>\n    )\n  }\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}